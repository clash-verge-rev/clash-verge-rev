{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PermissionFile",
  "description": "Permission file that can define a default permission, a set of permissions or a list of inlined permissions.",
  "type": "object",
  "properties": {
    "default": {
      "description": "The default permission set for the plugin",
      "anyOf": [
        {
          "$ref": "#/definitions/DefaultPermission"
        },
        {
          "type": "null"
        }
      ]
    },
    "set": {
      "description": "A list of permissions sets defined",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PermissionSet"
      }
    },
    "permission": {
      "description": "A list of inlined permissions",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Permission"
      }
    }
  },
  "definitions": {
    "DefaultPermission": {
      "description": "The default permission set of the plugin.\n\nWorks similarly to a permission with the \"default\" identifier.",
      "type": "object",
      "required": ["permissions"],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": ["integer", "null"],
          "format": "uint64",
          "minimum": 1.0
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri convention is to use <h4> headings in markdown content for Tauri documentation generation purposes.",
          "type": ["string", "null"]
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionSet": {
      "description": "A set of direct permissions grouped together under a new name.",
      "type": "object",
      "required": ["description", "identifier", "permissions"],
      "properties": {
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does.",
          "type": "string"
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionKind"
          }
        }
      }
    },
    "Permission": {
      "description": "Descriptions of explicit privileges of commands.\n\nIt can enable commands to be accessible in the frontend of the application.\n\nIf the scope is defined it can be used to fine grain control the access of individual or multiple commands.",
      "type": "object",
      "required": ["identifier"],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": ["integer", "null"],
          "format": "uint64",
          "minimum": 1.0
        },
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri internal convention is to use <h4> headings in markdown content for Tauri documentation generation purposes.",
          "type": ["string", "null"]
        },
        "commands": {
          "description": "Allowed or denied commands when using this permission.",
          "default": {
            "allow": [],
            "deny": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/Commands"
            }
          ]
        },
        "scope": {
          "description": "Allowed or denied scoped when using this permission.",
          "allOf": [
            {
              "$ref": "#/definitions/Scopes"
            }
          ]
        },
        "platforms": {
          "description": "Target platforms this permission applies. By default all platforms are affected by this permission.",
          "type": ["array", "null"],
          "items": {
            "$ref": "#/definitions/Target"
          }
        }
      }
    },
    "Commands": {
      "description": "Allowed and denied commands inside a permission.\n\nIf two commands clash inside of `allow` and `deny`, it should be denied by default.",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Allowed command.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deny": {
          "description": "Denied command, which takes priority.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Scopes": {
      "description": "An argument for fine grained behavior control of Tauri commands.\n\nIt can be of any serde serializable type and is used to allow or prevent certain actions inside a Tauri command. The configured scope is passed to the command and will be enforced by the command implementation.\n\n## Example\n\n```json { \"allow\": [{ \"path\": \"$HOME/**\" }], \"deny\": [{ \"path\": \"$HOME/secret.txt\" }] } ```",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Data that defines what is allowed by the scope.",
          "type": ["array", "null"],
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        "deny": {
          "description": "Data that defines what is denied by the scope. This should be prioritized by validation logic.",
          "type": ["array", "null"],
          "items": {
            "$ref": "#/definitions/Value"
          }
        }
      }
    },
    "Value": {
      "description": "All supported ACL values.",
      "anyOf": [
        {
          "description": "Represents a null JSON value.",
          "type": "null"
        },
        {
          "description": "Represents a [`bool`].",
          "type": "boolean"
        },
        {
          "description": "Represents a valid ACL [`Number`].",
          "allOf": [
            {
              "$ref": "#/definitions/Number"
            }
          ]
        },
        {
          "description": "Represents a [`String`].",
          "type": "string"
        },
        {
          "description": "Represents a list of other [`Value`]s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        {
          "description": "Represents a map of [`String`] keys to [`Value`]s.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Value"
          }
        }
      ]
    },
    "Number": {
      "description": "A valid ACL number.",
      "anyOf": [
        {
          "description": "Represents an [`i64`].",
          "type": "integer",
          "format": "int64"
        },
        {
          "description": "Represents a [`f64`].",
          "type": "number",
          "format": "double"
        }
      ]
    },
    "Target": {
      "description": "Platform target.",
      "oneOf": [
        {
          "description": "MacOS.",
          "type": "string",
          "enum": ["macOS"]
        },
        {
          "description": "Windows.",
          "type": "string",
          "enum": ["windows"]
        },
        {
          "description": "Linux.",
          "type": "string",
          "enum": ["linux"]
        },
        {
          "description": "Android.",
          "type": "string",
          "enum": ["android"]
        },
        {
          "description": "iOS.",
          "type": "string",
          "enum": ["iOS"]
        }
      ]
    },
    "PermissionKind": {
      "type": "string",
      "oneOf": [
        {
          "description": "Enables the clean_fakeip command without any pre-configured scope.",
          "type": "string",
          "const": "allow-clean-fakeip"
        },
        {
          "description": "Denies the clean_fakeip command without any pre-configured scope.",
          "type": "string",
          "const": "deny-clean-fakeip"
        },
        {
          "description": "Enables the close_all_connections command without any pre-configured scope.",
          "type": "string",
          "const": "allow-close-all-connections"
        },
        {
          "description": "Denies the close_all_connections command without any pre-configured scope.",
          "type": "string",
          "const": "deny-close-all-connections"
        },
        {
          "description": "Enables the close_connections command without any pre-configured scope.",
          "type": "string",
          "const": "allow-close-connections"
        },
        {
          "description": "Denies the close_connections command without any pre-configured scope.",
          "type": "string",
          "const": "deny-close-connections"
        },
        {
          "description": "Enables the delay_group command without any pre-configured scope.",
          "type": "string",
          "const": "allow-delay-group"
        },
        {
          "description": "Denies the delay_group command without any pre-configured scope.",
          "type": "string",
          "const": "deny-delay-group"
        },
        {
          "description": "Enables the delay_proxy_by_name command without any pre-configured scope.",
          "type": "string",
          "const": "allow-delay-proxy-by-name"
        },
        {
          "description": "Denies the delay_proxy_by_name command without any pre-configured scope.",
          "type": "string",
          "const": "deny-delay-proxy-by-name"
        },
        {
          "description": "Enables the get_base_config command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-base-config"
        },
        {
          "description": "Denies the get_base_config command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-base-config"
        },
        {
          "description": "Enables the get_connections command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-connections"
        },
        {
          "description": "Denies the get_connections command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-connections"
        },
        {
          "description": "Enables the get_group_by_name command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-group-by-name"
        },
        {
          "description": "Denies the get_group_by_name command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-group-by-name"
        },
        {
          "description": "Enables the get_groups command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-groups"
        },
        {
          "description": "Denies the get_groups command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-groups"
        },
        {
          "description": "Enables the get_providers_proxy_by_name command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-providers-proxy-by-name"
        },
        {
          "description": "Denies the get_providers_proxy_by_name command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-providers-proxy-by-name"
        },
        {
          "description": "Enables the get_proxies command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-proxies"
        },
        {
          "description": "Denies the get_proxies command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-proxies"
        },
        {
          "description": "Enables the get_proxies_providers command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-proxies-providers"
        },
        {
          "description": "Denies the get_proxies_providers command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-proxies-providers"
        },
        {
          "description": "Enables the get_proxy_by_name command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-proxy-by-name"
        },
        {
          "description": "Denies the get_proxy_by_name command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-proxy-by-name"
        },
        {
          "description": "Enables the get_rules command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-rules"
        },
        {
          "description": "Denies the get_rules command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-rules"
        },
        {
          "description": "Enables the get_rules_providers command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-rules-providers"
        },
        {
          "description": "Denies the get_rules_providers command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-rules-providers"
        },
        {
          "description": "Enables the get_version command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-version"
        },
        {
          "description": "Denies the get_version command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-version"
        },
        {
          "description": "Enables the healthcheck_providers command without any pre-configured scope.",
          "type": "string",
          "const": "allow-healthcheck-providers"
        },
        {
          "description": "Denies the healthcheck_providers command without any pre-configured scope.",
          "type": "string",
          "const": "deny-healthcheck-providers"
        },
        {
          "description": "Enables the healthcheck_providers_proxies command without any pre-configured scope.",
          "type": "string",
          "const": "allow-healthcheck-providers-proxies"
        },
        {
          "description": "Denies the healthcheck_providers_proxies command without any pre-configured scope.",
          "type": "string",
          "const": "deny-healthcheck-providers-proxies"
        },
        {
          "description": "Enables the patch_base_config command without any pre-configured scope.",
          "type": "string",
          "const": "allow-patch-base-config"
        },
        {
          "description": "Denies the patch_base_config command without any pre-configured scope.",
          "type": "string",
          "const": "deny-patch-base-config"
        },
        {
          "description": "Enables the reload_config command without any pre-configured scope.",
          "type": "string",
          "const": "allow-reload-config"
        },
        {
          "description": "Denies the reload_config command without any pre-configured scope.",
          "type": "string",
          "const": "deny-reload-config"
        },
        {
          "description": "Enables the restart command without any pre-configured scope.",
          "type": "string",
          "const": "allow-restart"
        },
        {
          "description": "Denies the restart command without any pre-configured scope.",
          "type": "string",
          "const": "deny-restart"
        },
        {
          "description": "Enables the select_node_for_proxy command without any pre-configured scope.",
          "type": "string",
          "const": "allow-select-node-for-proxy"
        },
        {
          "description": "Denies the select_node_for_proxy command without any pre-configured scope.",
          "type": "string",
          "const": "deny-select-node-for-proxy"
        },
        {
          "description": "Enables the update_controller command without any pre-configured scope.",
          "type": "string",
          "const": "allow-update-controller"
        },
        {
          "description": "Denies the update_controller command without any pre-configured scope.",
          "type": "string",
          "const": "deny-update-controller"
        },
        {
          "description": "Enables the update_geo command without any pre-configured scope.",
          "type": "string",
          "const": "allow-update-geo"
        },
        {
          "description": "Denies the update_geo command without any pre-configured scope.",
          "type": "string",
          "const": "deny-update-geo"
        },
        {
          "description": "Enables the update_proxies_providers command without any pre-configured scope.",
          "type": "string",
          "const": "allow-update-proxies-providers"
        },
        {
          "description": "Denies the update_proxies_providers command without any pre-configured scope.",
          "type": "string",
          "const": "deny-update-proxies-providers"
        },
        {
          "description": "Enables the update_rules_providers command without any pre-configured scope.",
          "type": "string",
          "const": "allow-update-rules-providers"
        },
        {
          "description": "Denies the update_rules_providers command without any pre-configured scope.",
          "type": "string",
          "const": "deny-update-rules-providers"
        },
        {
          "description": "Enables the update_secret command without any pre-configured scope.",
          "type": "string",
          "const": "allow-update-secret"
        },
        {
          "description": "Denies the update_secret command without any pre-configured scope.",
          "type": "string",
          "const": "deny-update-secret"
        },
        {
          "description": "Enables the upgrade_core command without any pre-configured scope.",
          "type": "string",
          "const": "allow-upgrade-core"
        },
        {
          "description": "Denies the upgrade_core command without any pre-configured scope.",
          "type": "string",
          "const": "deny-upgrade-core"
        },
        {
          "description": "Enables the upgrade_geo command without any pre-configured scope.",
          "type": "string",
          "const": "allow-upgrade-geo"
        },
        {
          "description": "Denies the upgrade_geo command without any pre-configured scope.",
          "type": "string",
          "const": "deny-upgrade-geo"
        },
        {
          "description": "Enables the upgrade_ui command without any pre-configured scope.",
          "type": "string",
          "const": "allow-upgrade-ui"
        },
        {
          "description": "Denies the upgrade_ui command without any pre-configured scope.",
          "type": "string",
          "const": "deny-upgrade-ui"
        },
        {
          "description": "Enables the ws_connect command without any pre-configured scope.",
          "type": "string",
          "const": "allow-ws-connect"
        },
        {
          "description": "Denies the ws_connect command without any pre-configured scope.",
          "type": "string",
          "const": "deny-ws-connect"
        },
        {
          "description": "Enables the ws_connections command without any pre-configured scope.",
          "type": "string",
          "const": "allow-ws-connections"
        },
        {
          "description": "Denies the ws_connections command without any pre-configured scope.",
          "type": "string",
          "const": "deny-ws-connections"
        },
        {
          "description": "Enables the ws_disconnect command without any pre-configured scope.",
          "type": "string",
          "const": "allow-ws-disconnect"
        },
        {
          "description": "Denies the ws_disconnect command without any pre-configured scope.",
          "type": "string",
          "const": "deny-ws-disconnect"
        },
        {
          "description": "Enables the ws_logs command without any pre-configured scope.",
          "type": "string",
          "const": "allow-ws-logs"
        },
        {
          "description": "Denies the ws_logs command without any pre-configured scope.",
          "type": "string",
          "const": "deny-ws-logs"
        },
        {
          "description": "Enables the ws_memory command without any pre-configured scope.",
          "type": "string",
          "const": "allow-ws-memory"
        },
        {
          "description": "Denies the ws_memory command without any pre-configured scope.",
          "type": "string",
          "const": "deny-ws-memory"
        },
        {
          "description": "Enables the ws_send command without any pre-configured scope.",
          "type": "string",
          "const": "allow-ws-send"
        },
        {
          "description": "Denies the ws_send command without any pre-configured scope.",
          "type": "string",
          "const": "deny-ws-send"
        },
        {
          "description": "Enables the ws_traffic command without any pre-configured scope.",
          "type": "string",
          "const": "allow-ws-traffic"
        },
        {
          "description": "Denies the ws_traffic command without any pre-configured scope.",
          "type": "string",
          "const": "deny-ws-traffic"
        },
        {
          "description": "Default permissions for the plugin",
          "type": "string",
          "const": "default"
        }
      ]
    }
  }
}
