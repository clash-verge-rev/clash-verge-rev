name: Dev Alpha Build

on:
  push:
    branches: [dev]
    tags-ignore: [updater, alpha]
  workflow_dispatch:

concurrency:
  group: alpha-${{ github.ref }}
  cancel-in-progress: true

permissions: write-all
env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  alpha:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
        with:
          workspaces: src-tauri

      - name: Install Node
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        with:
          node-version: "20"

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Pnpm install and check
        run: |
          pnpm i
          pnpm check ${{ matrix.target }}

      - name: Tauri build
        uses: tauri-apps/tauri-action@05d4492c5fada129c607a4ef5c02c28951eba440 # v0
        env:
          # NODE_OPTIONS: "--max_old_space_size=4096"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: alpha
          releaseName: "Clash Verge Rev Alpha"
          releaseBody: "More new features are now supported."
          releaseDraft: false
          prerelease: true
          tauriScript: pnpm
          args: --target ${{ matrix.target }}

      - name: Portable Bundle
        if: matrix.os == 'windows-latest'
        run: pnpm portable ${{ matrix.target }} --alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  alpha-for-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Build for Linux
        uses: ./.github/build-for-linux
        env:
          # NODE_OPTIONS: "--max_old_space_size=4096"
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          target: ${{ matrix.target }}

      - name: Get Version
        run: |
          sudo apt-get update
          sudo apt-get install jq
          echo "VERSION=$(cat package.json | jq '.version' | tr -d '"')" >> $GITHUB_ENV
          echo "BUILDTIME=$(TZ=Asia/Shanghai date)" >> $GITHUB_ENV

      - name: Upload Release
        if: startsWith(matrix.target, 'x86_64')
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2
        with:
          tag_name: alpha
          name: "Clash Verge Rev Alpha"
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage*

      - name: Upload Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2
        with:
          tag_name: alpha
          name: "Clash Verge Rev Alpha"
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            src-tauri/target/${{ matrix.target }}/release/bundle/deb/*.deb
            src-tauri/target/${{ matrix.target }}/release/bundle/rpm/*.rpm

  # alpha-for-fixed-webview2:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - os: windows-latest
  #           target: x86_64-pc-windows-msvc
  #           arch: x64
  #         - os: windows-latest
  #           target: i686-pc-windows-msvc
  #           arch: x86
  #         - os: windows-latest
  #           target: aarch64-pc-windows-msvc
  #           arch: arm64
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

  #     - name: Add Rust Target
  #       run: rustup target add ${{ matrix.target }}

  #     - name: Rust Cache
  #       uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
  #       with:
  #         workspaces: src-tauri

  #     - name: Install Node
  #       uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
  #       with:
  #         node-version: "20"

  #     - uses: pnpm/action-setup@v4
  #       name: Install pnpm
  #       with:
  #         run_install: false

  #     - name: Pnpm install and check
  #       run: |
  #         pnpm i
  #         pnpm check ${{ matrix.target }}

  #     - name: Download WebView2 Runtime
  #       run: |
  #         invoke-webrequest -uri https://github.com/westinyang/WebView2RuntimeArchive/releases/download/109.0.1518.78/Microsoft.WebView2.FixedVersionRuntime.109.0.1518.78.${{ matrix.arch }}.cab -outfile Microsoft.WebView2.FixedVersionRuntime.109.0.1518.78.${{ matrix.arch }}.cab
  #         Expand .\Microsoft.WebView2.FixedVersionRuntime.109.0.1518.78.${{ matrix.arch }}.cab -F:* ./src-tauri
  #         Remove-Item .\src-tauri\tauri.windows.conf.json
  #         Rename-Item .\src-tauri\webview2.${{ matrix.arch }}.json tauri.windows.conf.json

  #     - name: Tauri build
  #       id: build
  #       uses: tauri-apps/tauri-action@41242bd545b6d1310ffc1685fb8bb87e97f0b748 # v0
  #       env:
  #         NODE_OPTIONS: "--max_old_space_size=4096"
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  #         TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
  #       with:
  #         tauriScript: pnpm
  #         args: --target ${{ matrix.target }}

  #     - name: Rename
  #       run: |
  #         Rename-Item '.\src-tauri\target\${{ matrix.target }}\release\bundle\nsis\Clash Verge_${{steps.build.outputs.appVersion}}_${{ matrix.arch }}-setup.exe' 'Clash Verge_${{steps.build.outputs.appVersion}}_${{ matrix.arch }}_fixed_webview2-setup.exe'
  #         Rename-Item '.\src-tauri\target\${{ matrix.target }}\release\bundle\nsis\Clash Verge_${{steps.build.outputs.appVersion}}_${{ matrix.arch }}-setup.nsis.zip' 'Clash Verge_${{steps.build.outputs.appVersion}}_${{ matrix.arch }}_fixed_webview2-setup.nsis.zip'
  #         Rename-Item '.\src-tauri\target\${{ matrix.target }}\release\bundle\nsis\Clash Verge_${{steps.build.outputs.appVersion}}_${{ matrix.arch }}-setup.nsis.zip.sig' 'Clash Verge_${{steps.build.outputs.appVersion}}_${{ matrix.arch }}_fixed_webview2-setup.nsis.zip.sig'

  #     - name: Upload Release
  #       uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0 # v2
  #       with:
  #         tag_name: alpha
  #         name: "Clash Verge Rev Alpha"
  #         body: "More new features are now supported."
  #         prerelease: true
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         files: src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*setup*

  #     - name: Portable Bundle
  #       run: pnpm portable-fixed-webview2 ${{ matrix.target }} --alpha
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pkgbuild:
    name: PKGBUILD for ArchLinux
    needs: [alpha-for-linux]
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Makepkg Build and Check
        id: makepkg
        uses: edlanglois/pkgbuild-action@v1
        with:
          pkgdir: ${{ github.workspace }}/archbuild/alpha

      - name: Print Package Files
        run: |
          echo "Successfully created the following package archive"
          echo "Package: ${{ steps.makepkg.outputs.pkgfile0 }}"

      - name: Upload Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2
        with:
          tag_name: alpha
          name: "Clash Verge Rev Alpha"
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ steps.makepkg.outputs.pkgfile0 }}

  update_tag:
    name: Update tag
    runs-on: ubuntu-latest
    needs: [alpha, pkgbuild]
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Set Env
        run: |
          echo "BUILDTIME=$(TZ=Asia/Shanghai date)" >> $GITHUB_ENV
        shell: bash

      - name: Update Tag
        uses: richardsimko/update-tag@e173a8ef8f54ab526a91dad6139a25efed62424c # v1
        with:
          tag_name: alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Changelog
        run: |
          cat >> ${{ github.workspace }}/CHANGELOG.txt << 'EOF'
          ## 我应该下载哪个版本？

          ### MacOS (提示文件损坏或开发者无法验证请查看下面FAQ)
          - MacOS intel芯片: x64.dmg
          - MacOS apple M芯片: aarch64.dmg

          ### Linux
          - Linux 64位: amd64.deb/amd64.AppImage/amd64.rpm
          - Linux 32位: i386.deb/i386.rpm
          - Linux arm64架构: arm64.deb/arm64.rpm
          - Linux armv7架构: armhf.deb/armhf.rpm

          ### Windows 
          #### 正常版本(推荐)
          - 64位: x64-setup.exe
          - 32位: x86-setup.exe
          - arm64架构: arm64-setup.exe
          #### 便携版(不推荐使用，无法自动更新)
          - 64位: x64_portable.zip
          - 32位: x86_portable.zip
          - arm64架构: arm64_portable.zip

          [FAQ](https://clash-verge-rev.github.io/faq/windows.html)

          Created at  ${{ env.BUILDTIME }}.
          EOF

      - name: Upload Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2
        with:
          tag_name: alpha
          name: "Clash Verge Rev Alpha"
          body_path: ${{ github.workspace }}/CHANGELOG.txt
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
